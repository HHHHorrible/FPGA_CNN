// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=14,HLS_SYN_FF=3212,HLS_SYN_LUT=3785}" *)

module Conv (
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        interrupt
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] CHin_V;
wire   [15:0] Hin_V;
wire   [15:0] Win_V;
wire   [15:0] CHout_V;
wire   [7:0] Kx_V;
wire   [7:0] Ky_V;
wire   [7:0] Sx_V;
wire   [7:0] Sy_V;
wire   [0:0] mode_V;
wire   [0:0] relu_en_V;
wire   [31:0] feature_in;
wire   [31:0] W;
wire   [31:0] bias;
wire   [31:0] feature_out;
reg    gmem_blk_n_AR;
wire   [0:0] ap_CS_fsm_state31;
wire   [0:0] exitcond2_fu_877_p2;
reg    gmem_blk_n_R;
wire   [0:0] ap_CS_fsm_state64;
reg    gmem_blk_n_AW;
wire   [0:0] ap_CS_fsm_state29;
reg    gmem_blk_n_W;
wire   [0:0] ap_CS_fsm_state71;
reg    gmem_blk_n_B;
wire   [0:0] ap_CS_fsm_state75;
wire   [0:0] ap_CS_fsm_state39;
wire   [0:0] ap_CS_fsm_state46;
wire   [0:0] ap_CS_fsm_state40;
wire   [0:0] ap_CS_fsm_state47;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [31:0] reg_423;
reg   [0:0] relu_en_V_read_reg_1112;
reg   [7:0] Sy_V_read_reg_1117;
reg   [7:0] Sx_V_read_reg_1123;
reg   [7:0] Ky_V_read_reg_1129;
reg   [7:0] Kx_V_read_reg_1136;
reg   [15:0] CHout_V_read_reg_1143;
reg   [15:0] Win_V_read_reg_1148;
reg   [15:0] Hin_V_read_reg_1153;
reg   [15:0] CHin_V_read_reg_1158;
reg   [29:0] feature_out7_reg_1164;
reg   [29:0] tmp_1_reg_1169;
reg   [29:0] W3_reg_1174;
reg   [29:0] feature_in1_reg_1179;
wire   [7:0] p_s_fu_585_p3;
reg   [7:0] p_s_reg_1184;
wire   [7:0] p_1_fu_593_p3;
reg   [7:0] p_1_reg_1189;
wire   [16:0] lhs_V_2_cast_fu_613_p1;
reg   [16:0] lhs_V_2_cast_reg_1194;
wire   [16:0] r_V_3_fu_617_p2;
reg   [16:0] r_V_3_reg_1199;
wire   [16:0] lhs_V_4_cast_fu_635_p1;
reg   [16:0] lhs_V_4_cast_reg_1204;
wire   [16:0] r_V_7_fu_639_p2;
reg   [16:0] r_V_7_reg_1209;
wire   [0:0] ap_CS_fsm_state2;
wire   [31:0] tmp_2_fu_695_p1;
reg   [31:0] tmp_2_reg_1234;
wire   [0:0] ap_CS_fsm_state24;
wire   [30:0] tmp_14_cast_fu_698_p1;
reg   [30:0] tmp_14_cast_reg_1239;
wire   [31:0] tmp_4_fu_701_p1;
reg   [31:0] tmp_4_reg_1244;
wire   [31:0] tmp_10_fu_704_p1;
reg   [31:0] tmp_10_reg_1249;
wire   [15:0] Wout_V_fu_711_p2;
reg   [15:0] Wout_V_reg_1254;
wire   [15:0] Hout_V_fu_721_p2;
reg   [15:0] Hout_V_reg_1259;
wire   [31:0] tmp_5_fu_727_p1;
reg   [31:0] tmp_5_reg_1264;
wire   [31:0] tmp_7_fu_731_p1;
reg   [31:0] tmp_7_reg_1270;
wire   [15:0] tmp_8_fu_735_p1;
reg   [15:0] tmp_8_reg_1275;
wire   [15:0] tmp_9_fu_738_p1;
reg   [15:0] tmp_9_reg_1280;
wire   [15:0] tmp_11_fu_741_p1;
reg   [15:0] tmp_11_reg_1285;
wire   [15:0] tmp_15_fu_744_p1;
reg   [15:0] tmp_15_reg_1290;
wire   [31:0] rhs_V_fu_747_p1;
reg   [31:0] rhs_V_reg_1295;
wire   [31:0] tmp_18_fu_750_p1;
reg   [31:0] tmp_18_reg_1300;
wire   [31:0] tmp_19_fu_753_p1;
reg   [31:0] tmp_19_reg_1305;
wire   [31:0] tmp_20_fu_756_p1;
reg   [31:0] tmp_20_reg_1310;
wire   [31:0] p_3_fu_759_p1;
reg   [31:0] p_3_reg_1315;
wire   [31:0] next_mul1_fu_762_p2;
reg   [31:0] next_mul1_reg_1320;
wire   [0:0] ap_CS_fsm_state25;
wire   [15:0] cout_fu_780_p2;
reg   [15:0] cout_reg_1328;
reg   [31:0] gmem_addr_reg_1333;
wire   [0:0] exitcond5_fu_775_p2;
wire   [31:0] p_2_fu_1107_p2;
reg   [31:0] p_2_reg_1339;
wire   [15:0] next_mul2_fu_801_p2;
reg   [15:0] next_mul2_reg_1344;
wire   [0:0] ap_CS_fsm_state26;
wire   [15:0] i_fu_815_p2;
reg   [15:0] i_reg_1352;
wire   [15:0] tmp_13_fu_821_p2;
reg   [15:0] tmp_13_reg_1357;
wire   [0:0] exitcond1_fu_810_p2;
wire   [31:0] feature_out8_sum_fu_836_p2;
reg   [31:0] feature_out8_sum_reg_1367;
wire   [0:0] ap_CS_fsm_state28;
reg    ap_sig_ioackin_gmem_AWREADY;
wire   [15:0] next_mul3_fu_847_p2;
reg   [15:0] next_mul3_reg_1377;
wire   [0:0] ap_CS_fsm_state30;
wire   [15:0] j_fu_857_p2;
reg   [15:0] j_reg_1385;
wire   [15:0] tmp_17_fu_863_p2;
reg   [15:0] tmp_17_reg_1390;
wire   [0:0] exitcond_fu_852_p2;
wire   [31:0] next_mul_fu_868_p2;
reg   [31:0] next_mul_reg_1395;
reg    ap_sig_ioackin_gmem_ARREADY;
reg    ap_block_state31_io;
wire   [15:0] cin_fu_882_p2;
reg   [15:0] cin_reg_1403;
wire   [31:0] grp_fu_894_p2;
reg   [31:0] tmp5_reg_1413;
wire   [0:0] ap_CS_fsm_state33;
wire   [7:0] ii_fu_908_p2;
reg   [7:0] ii_reg_1421;
wire   [0:0] ap_CS_fsm_state34;
wire   [15:0] w_V_fu_918_p2;
reg   [15:0] w_V_reg_1426;
wire   [0:0] exitcond3_fu_903_p2;
wire   [0:0] slt_fu_927_p2;
reg   [0:0] slt_reg_1432;
wire   [0:0] ap_CS_fsm_state35;
wire   [31:0] grp_fu_937_p2;
reg   [31:0] tmp7_reg_1447;
wire   [0:0] ap_CS_fsm_state36;
wire   [0:0] rev_fu_956_p2;
reg   [0:0] rev_reg_1452;
wire   [0:0] ap_CS_fsm_state37;
wire   [31:0] grp_fu_951_p2;
reg   [31:0] tmp3_reg_1457;
wire   [7:0] jj_fu_970_p2;
reg   [7:0] jj_reg_1465;
wire   [0:0] ap_CS_fsm_state38;
wire   [0:0] tmp_38_fu_990_p3;
reg   [0:0] tmp_38_reg_1470;
wire   [0:0] exitcond4_fu_965_p2;
wire   [0:0] brmerge_fu_1017_p2;
reg   [0:0] brmerge_reg_1474;
wire   [31:0] feature_in2_sum_fu_1027_p2;
reg   [31:0] feature_in2_sum_reg_1478;
wire   [31:0] W4_sum_fu_1037_p2;
reg   [31:0] W4_sum_reg_1483;
reg   [31:0] gmem_addr_3_read_reg_1500;
wire   [31:0] grp_fu_414_p2;
reg   [31:0] tp_reg_1505;
wire   [0:0] ap_CS_fsm_state51;
wire   [31:0] grp_fu_408_p2;
reg   [31:0] sum_5_reg_1510;
wire   [0:0] ap_CS_fsm_state56;
reg   [31:0] sum_3_reg_1515;
wire   [0:0] ap_CS_fsm_state69;
wire   [31:0] sum_4_fu_1100_p3;
reg   [31:0] sum_4_reg_1522;
wire   [0:0] ap_CS_fsm_state70;
reg   [15:0] i_op_assign_s_reg_245;
reg   [31:0] phi_mul1_reg_256;
reg   [15:0] i_op_assign_9_reg_268;
reg   [15:0] phi_mul2_reg_279;
reg   [15:0] i_op_assign_1_reg_290;
reg    ap_sig_ioackin_gmem_WREADY;
reg   [15:0] phi_mul3_reg_301;
reg   [31:0] sum_reg_312;
reg   [15:0] i_op_assign_reg_324;
reg   [31:0] phi_mul_reg_335;
reg   [31:0] sum_1_reg_347;
reg   [7:0] i_op_assign_2_reg_359;
reg   [31:0] sum_2_reg_370;
reg   [31:0] sum_2_be_phi_fu_397_p6;
wire   [0:0] ap_CS_fsm_state57;
reg   [7:0] i_op_assign_3_reg_382;
reg   [31:0] sum_2_be_reg_393;
wire   [31:0] bias6_sum_cast_fu_791_p1;
reg    ap_reg_ioackin_gmem_AWREADY;
reg    ap_reg_ioackin_gmem_ARREADY;
reg    ap_reg_ioackin_gmem_WREADY;
reg   [31:0] grp_fu_408_p0;
reg   [31:0] grp_fu_408_p1;
wire   [0:0] ap_CS_fsm_state52;
wire   [0:0] ap_CS_fsm_state65;
wire   [0:0] ap_CS_fsm_state48;
wire   [8:0] tmp_2_cast_fu_469_p1;
wire   [8:0] r_V_tr_fu_473_p2;
wire   [8:0] p_neg9_fu_487_p2;
wire   [7:0] tmp_3_fu_493_p4;
wire   [0:0] tmp_12_fu_479_p3;
wire   [7:0] tmp_6_fu_513_p2;
wire   [7:0] tmp_14_fu_503_p4;
wire   [8:0] tmp_26_cast_fu_527_p1;
wire   [8:0] r_V_1_tr_fu_531_p2;
wire   [8:0] p_neg_fu_545_p2;
wire   [7:0] tmp_s_fu_551_p4;
wire   [0:0] tmp_16_fu_537_p3;
wire   [7:0] tmp_22_fu_571_p2;
wire   [7:0] tmp_21_fu_561_p4;
wire   [7:0] pad_x_V_fu_519_p3;
wire   [7:0] pad_y_V_fu_577_p3;
wire   [8:0] r_V_2_fu_601_p3;
wire   [16:0] r_V_2_cast_fu_609_p1;
wire   [8:0] r_V_6_fu_623_p3;
wire   [16:0] r_V_6_cast_fu_631_p1;
wire   [17:0] r_V_3_cast_fu_645_p1;
wire   [17:0] rhs_V_2_cast_fu_648_p1;
wire   [17:0] r_V_4_fu_651_p2;
wire  signed [18:0] grp_fu_664_p0;
wire   [8:0] grp_fu_664_p1;
wire   [17:0] r_V_7_cast_fu_670_p1;
wire   [17:0] rhs_V_5_cast_fu_673_p1;
wire   [17:0] r_V_8_fu_676_p2;
wire  signed [18:0] grp_fu_689_p0;
wire   [8:0] grp_fu_689_p1;
wire   [15:0] grp_fu_664_p2;
wire   [15:0] tmp_27_fu_707_p1;
wire   [15:0] grp_fu_689_p2;
wire   [15:0] tmp_32_fu_717_p1;
wire   [30:0] i_op_assign_14_cast6_1_fu_771_p1;
wire   [30:0] bias6_sum_fu_786_p2;
wire   [31:0] i_op_assign_10_cast5_fu_806_p1;
wire  signed [31:0] grp_fu_831_p0;
wire   [15:0] grp_fu_831_p1;
wire   [31:0] grp_fu_831_p2;
wire   [31:0] i_op_assign_cast3_fu_873_p1;
wire  signed [31:0] grp_fu_894_p0;
wire   [7:0] grp_fu_894_p1;
wire   [15:0] tmp_23_fu_914_p1;
wire  signed [16:0] lhs_V_cast_fu_923_p1;
wire   [31:0] i_op_assign_11_cast2_fu_899_p1;
wire  signed [31:0] grp_fu_937_p0;
wire   [7:0] grp_fu_937_p1;
wire  signed [31:0] lhs_V_fu_942_p1;
wire  signed [31:0] grp_fu_951_p0;
wire   [15:0] grp_fu_951_p1;
wire   [15:0] tmp_24_fu_976_p1;
wire   [15:0] h_V_fu_980_p2;
wire   [15:0] tmp_25_fu_985_p2;
wire  signed [16:0] tmp_28_cast_fu_1002_p1;
wire   [0:0] slt1_fu_1006_p2;
wire   [0:0] rev1_fu_1011_p2;
wire  signed [31:0] tmp_28_fu_998_p1;
wire   [31:0] tmp_29_fu_1022_p2;
wire   [31:0] i_op_assign_13_cast1_fu_961_p1;
wire   [31:0] tmp_30_fu_1032_p2;
wire   [31:0] sum_5_to_int_fu_1054_p1;
wire   [7:0] tmp_33_fu_1057_p4;
wire   [22:0] tmp_34_fu_1067_p1;
wire   [0:0] notrhs_fu_1077_p2;
wire   [0:0] notlhs_fu_1071_p2;
wire   [0:0] tmp_35_fu_1083_p2;
wire   [0:0] tmp_36_fu_418_p2;
wire   [0:0] tmp_37_fu_1089_p2;
wire   [0:0] or_cond_fu_1095_p2;
wire   [15:0] p_2_fu_1107_p0;
wire   [15:0] p_2_fu_1107_p1;
reg    grp_fu_664_ap_start;
wire    grp_fu_664_ap_done;
reg    grp_fu_689_ap_start;
wire    grp_fu_689_ap_done;
reg    grp_fu_894_ce;
wire   [0:0] ap_CS_fsm_state32;
reg   [74:0] ap_NS_fsm;
wire   [18:0] grp_fu_664_p10;
wire   [18:0] grp_fu_689_p10;
wire   [31:0] p_2_fu_1107_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 75'd1;
#0 ap_reg_ioackin_gmem_AWREADY = 1'b0;
#0 ap_reg_ioackin_gmem_ARREADY = 1'b0;
#0 ap_reg_ioackin_gmem_WREADY = 1'b0;
end

Conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .CHin_V(CHin_V),
    .Hin_V(Hin_V),
    .Win_V(Win_V),
    .CHout_V(CHout_V),
    .Kx_V(Kx_V),
    .Ky_V(Ky_V),
    .Sx_V(Sx_V),
    .Sy_V(Sy_V),
    .mode_V(mode_V),
    .relu_en_V(relu_en_V),
    .feature_in(feature_in),
    .W(W),
    .bias(bias),
    .feature_out(feature_out)
);

Conv_gmem_m_axi #(
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
Conv_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(feature_out8_sum_reg_1367),
    .I_AWID(1'd0),
    .I_AWLEN(tmp_5_reg_1264),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(sum_4_reg_1522),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Conv_fadd_32ns_32bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_fadd_32ns_32bkb_U0(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_408_p0),
    .din1(grp_fu_408_p1),
    .ce(1'b1),
    .dout(grp_fu_408_p2)
);

Conv_fmul_32ns_32cud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Conv_fmul_32ns_32cud_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(reg_423),
    .din1(gmem_addr_3_read_reg_1500),
    .ce(1'b1),
    .dout(grp_fu_414_p2)
);

Conv_fcmp_32ns_32dEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
Conv_fcmp_32ns_32dEe_U2(
    .din0(sum_3_reg_1515),
    .din1(32'd0),
    .opcode(5'd4),
    .dout(tmp_36_fu_418_p2)
);

Conv_sdiv_19s_9nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
Conv_sdiv_19s_9nseOg_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_664_ap_start),
    .done(grp_fu_664_ap_done),
    .din0(grp_fu_664_p0),
    .din1(grp_fu_664_p1),
    .ce(1'b1),
    .dout(grp_fu_664_p2)
);

Conv_sdiv_19s_9nseOg #(
    .ID( 1 ),
    .NUM_STAGE( 23 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 16 ))
Conv_sdiv_19s_9nseOg_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_689_ap_start),
    .done(grp_fu_689_ap_done),
    .din0(grp_fu_689_p0),
    .din1(grp_fu_689_p1),
    .ce(1'b1),
    .dout(grp_fu_689_p2)
);

Conv_mul_32s_16nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_32s_16nsfYi_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_831_p0),
    .din1(grp_fu_831_p1),
    .ce(1'b1),
    .dout(grp_fu_831_p2)
);

Conv_mul_32s_8ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Conv_mul_32s_8ns_g8j_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_894_p0),
    .din1(grp_fu_894_p1),
    .ce(grp_fu_894_ce),
    .dout(grp_fu_894_p2)
);

Conv_mul_32s_8ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
Conv_mul_32s_8ns_g8j_U7(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_937_p0),
    .din1(grp_fu_937_p1),
    .ce(1'b1),
    .dout(grp_fu_937_p2)
);

Conv_mul_32s_16nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_32s_16nsfYi_U8(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_951_p0),
    .din1(grp_fu_951_p1),
    .ce(1'b1),
    .dout(grp_fu_951_p2)
);

Conv_mul_mul_16nshbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
Conv_mul_mul_16nshbi_U9(
    .din0(p_2_fu_1107_p0),
    .din1(p_2_fu_1107_p1),
    .dout(p_2_fu_1107_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= 75'd1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_ARREADY <= 1'b0;
    end else begin
        if ((((1'd1 == ap_CS_fsm_state39) & ~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'd1 == ap_CS_fsm_state40) & ~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) | ((1'd1 == ap_CS_fsm_state31) & ~(exitcond2_fu_877_p2 == 1'd0) & ~(1'b1 == ap_block_state31_io)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b0;
        end else if ((((1'd1 == ap_CS_fsm_state31) & ~(exitcond2_fu_877_p2 == 1'd0) & (1'b1 == gmem_ARREADY)) | ((1'd1 == ap_CS_fsm_state39) & (1'b1 == gmem_ARREADY)) | ((1'd1 == ap_CS_fsm_state40) & (1'b1 == gmem_ARREADY)))) begin
            ap_reg_ioackin_gmem_ARREADY <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_AWREADY <= 1'b0;
    end else begin
        if ((1'd1 == ap_CS_fsm_state29)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b0;
            end else if ((1'b1 == gmem_AWREADY)) begin
                ap_reg_ioackin_gmem_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_gmem_WREADY <= 1'b0;
    end else begin
        if ((1'd1 == ap_CS_fsm_state71)) begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b0;
            end else if ((1'b1 == gmem_WREADY)) begin
                ap_reg_ioackin_gmem_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state29) & ~(1'b0 == ap_sig_ioackin_gmem_AWREADY))) begin
        i_op_assign_1_reg_290 <= 16'd0;
    end else if (((1'd1 == ap_CS_fsm_state71) & ~(1'b0 == ap_sig_ioackin_gmem_WREADY))) begin
        i_op_assign_1_reg_290 <= j_reg_1385;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state38) & ~(1'd0 == exitcond4_fu_965_p2))) begin
        i_op_assign_2_reg_359 <= ii_reg_1421;
    end else if ((1'd1 == ap_CS_fsm_state33)) begin
        i_op_assign_2_reg_359 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state57)) begin
        i_op_assign_3_reg_382 <= jj_reg_1465;
    end else if ((1'd1 == ap_CS_fsm_state37)) begin
        i_op_assign_3_reg_382 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state25) & (1'd0 == exitcond5_fu_775_p2))) begin
        i_op_assign_9_reg_268 <= 16'd0;
    end else if (((1'd1 == ap_CS_fsm_state75) & ~(1'b0 == gmem_BVALID))) begin
        i_op_assign_9_reg_268 <= i_reg_1352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state34) & ~(1'd0 == exitcond3_fu_903_p2))) begin
        i_op_assign_reg_324 <= cin_reg_1403;
    end else if (((1'd1 == ap_CS_fsm_state30) & (1'd0 == exitcond_fu_852_p2))) begin
        i_op_assign_reg_324 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state26) & ~(1'd0 == exitcond1_fu_810_p2))) begin
        i_op_assign_s_reg_245 <= cout_reg_1328;
    end else if ((1'd1 == ap_CS_fsm_state24)) begin
        i_op_assign_s_reg_245 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state26) & ~(1'd0 == exitcond1_fu_810_p2))) begin
        phi_mul1_reg_256 <= next_mul1_reg_1320;
    end else if ((1'd1 == ap_CS_fsm_state24)) begin
        phi_mul1_reg_256 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state25) & (1'd0 == exitcond5_fu_775_p2))) begin
        phi_mul2_reg_279 <= 16'd0;
    end else if (((1'd1 == ap_CS_fsm_state75) & ~(1'b0 == gmem_BVALID))) begin
        phi_mul2_reg_279 <= next_mul2_reg_1344;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state29) & ~(1'b0 == ap_sig_ioackin_gmem_AWREADY))) begin
        phi_mul3_reg_301 <= 16'd0;
    end else if (((1'd1 == ap_CS_fsm_state71) & ~(1'b0 == ap_sig_ioackin_gmem_WREADY))) begin
        phi_mul3_reg_301 <= next_mul3_reg_1377;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state34) & ~(1'd0 == exitcond3_fu_903_p2))) begin
        phi_mul_reg_335 <= next_mul_reg_1395;
    end else if (((1'd1 == ap_CS_fsm_state30) & (1'd0 == exitcond_fu_852_p2))) begin
        phi_mul_reg_335 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state38) & ~(1'd0 == exitcond4_fu_965_p2))) begin
        sum_1_reg_347 <= sum_2_reg_370;
    end else if ((1'd1 == ap_CS_fsm_state33)) begin
        sum_1_reg_347 <= sum_reg_312;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == ap_CS_fsm_state38) & (1'd0 == exitcond4_fu_965_p2) & ~(1'd0 == tmp_38_fu_990_p3)) | ((1'd1 == ap_CS_fsm_state38) & (1'd0 == exitcond4_fu_965_p2) & (1'd0 == tmp_38_fu_990_p3) & ~(1'd0 == brmerge_fu_1017_p2)))) begin
        sum_2_be_reg_393 <= sum_2_reg_370;
    end else if (((1'd1 == ap_CS_fsm_state57) & (1'd0 == tmp_38_reg_1470) & (1'd0 == brmerge_reg_1474))) begin
        sum_2_be_reg_393 <= sum_5_reg_1510;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state57)) begin
        sum_2_reg_370 <= sum_2_be_phi_fu_397_p6;
    end else if ((1'd1 == ap_CS_fsm_state37)) begin
        sum_2_reg_370 <= sum_1_reg_347;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state34) & ~(1'd0 == exitcond3_fu_903_p2))) begin
        sum_reg_312 <= sum_1_reg_347;
    end else if (((1'd1 == ap_CS_fsm_state30) & (1'd0 == exitcond_fu_852_p2))) begin
        sum_reg_312 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_CS_fsm_state1 == 1'd1) & ~(1'b0 == ap_start))) begin
        CHin_V_read_reg_1158 <= CHin_V;
        CHout_V_read_reg_1143 <= CHout_V;
        Hin_V_read_reg_1153 <= Hin_V;
        Kx_V_read_reg_1136 <= Kx_V;
        Ky_V_read_reg_1129 <= Ky_V;
        Sx_V_read_reg_1123 <= Sx_V;
        Sy_V_read_reg_1117 <= Sy_V;
        W3_reg_1174 <= {{W[31:2]}};
        Win_V_read_reg_1148 <= Win_V;
        feature_in1_reg_1179 <= {{feature_in[31:2]}};
        feature_out7_reg_1164 <= {{feature_out[31:2]}};
        lhs_V_2_cast_reg_1194[15 : 0] <= lhs_V_2_cast_fu_613_p1[15 : 0];
        lhs_V_4_cast_reg_1204[15 : 0] <= lhs_V_4_cast_fu_635_p1[15 : 0];
        p_1_reg_1189 <= p_1_fu_593_p3;
        p_s_reg_1184 <= p_s_fu_585_p3;
        r_V_3_reg_1199 <= r_V_3_fu_617_p2;
        r_V_7_reg_1209 <= r_V_7_fu_639_p2;
        relu_en_V_read_reg_1112 <= relu_en_V;
        tmp_1_reg_1169 <= {{bias[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state24)) begin
        Hout_V_reg_1259 <= Hout_V_fu_721_p2;
        Wout_V_reg_1254 <= Wout_V_fu_711_p2;
        p_3_reg_1315[7 : 0] <= p_3_fu_759_p1[7 : 0];
        rhs_V_reg_1295[15 : 0] <= rhs_V_fu_747_p1[15 : 0];
        tmp_10_reg_1249[29 : 0] <= tmp_10_fu_704_p1[29 : 0];
        tmp_11_reg_1285[7 : 0] <= tmp_11_fu_741_p1[7 : 0];
        tmp_14_cast_reg_1239[29 : 0] <= tmp_14_cast_fu_698_p1[29 : 0];
        tmp_15_reg_1290[7 : 0] <= tmp_15_fu_744_p1[7 : 0];
        tmp_18_reg_1300[15 : 0] <= tmp_18_fu_750_p1[15 : 0];
        tmp_19_reg_1305[15 : 0] <= tmp_19_fu_753_p1[15 : 0];
        tmp_20_reg_1310[7 : 0] <= tmp_20_fu_756_p1[7 : 0];
        tmp_2_reg_1234[29 : 0] <= tmp_2_fu_695_p1[29 : 0];
        tmp_4_reg_1244[29 : 0] <= tmp_4_fu_701_p1[29 : 0];
        tmp_5_reg_1264[15 : 0] <= tmp_5_fu_727_p1[15 : 0];
        tmp_7_reg_1270[15 : 0] <= tmp_7_fu_731_p1[15 : 0];
        tmp_8_reg_1275[7 : 0] <= tmp_8_fu_735_p1[7 : 0];
        tmp_9_reg_1280[7 : 0] <= tmp_9_fu_738_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state38) & (1'd0 == exitcond4_fu_965_p2) & (1'd0 == tmp_38_fu_990_p3) & (1'd0 == brmerge_fu_1017_p2))) begin
        W4_sum_reg_1483 <= W4_sum_fu_1037_p2;
        feature_in2_sum_reg_1478 <= feature_in2_sum_fu_1027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state38) & (1'd0 == exitcond4_fu_965_p2) & (1'd0 == tmp_38_fu_990_p3))) begin
        brmerge_reg_1474 <= brmerge_fu_1017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state31) & ~(1'b1 == ap_block_state31_io))) begin
        cin_reg_1403 <= cin_fu_882_p2;
        next_mul_reg_1395 <= next_mul_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state25)) begin
        cout_reg_1328 <= cout_fu_780_p2;
        next_mul1_reg_1320 <= next_mul1_fu_762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state28)) begin
        feature_out8_sum_reg_1367 <= feature_out8_sum_fu_836_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state47) & ~(1'b0 == gmem_RVALID))) begin
        gmem_addr_3_read_reg_1500 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state25) & (1'd0 == exitcond5_fu_775_p2))) begin
        gmem_addr_reg_1333[30 : 0] <= bias6_sum_cast_fu_791_p1[30 : 0];
        p_2_reg_1339 <= p_2_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state26)) begin
        i_reg_1352 <= i_fu_815_p2;
        next_mul2_reg_1344 <= next_mul2_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state34)) begin
        ii_reg_1421 <= ii_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state30)) begin
        j_reg_1385 <= j_fu_857_p2;
        next_mul3_reg_1377 <= next_mul3_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state38)) begin
        jj_reg_1465 <= jj_fu_970_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == ap_CS_fsm_state46) & ~(1'b0 == gmem_RVALID)) | ((1'd1 == ap_CS_fsm_state64) & ~(1'b0 == gmem_RVALID)))) begin
        reg_423 <= gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state37)) begin
        rev_reg_1452 <= rev_fu_956_p2;
        tmp3_reg_1457 <= grp_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state34) & (1'd0 == exitcond3_fu_903_p2))) begin
        slt_reg_1432 <= slt_fu_927_p2;
        w_V_reg_1426 <= w_V_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state69)) begin
        sum_3_reg_1515 <= grp_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state70)) begin
        sum_4_reg_1522 <= sum_4_fu_1100_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state56)) begin
        sum_5_reg_1510 <= grp_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state33)) begin
        tmp5_reg_1413 <= grp_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state36)) begin
        tmp7_reg_1447 <= grp_fu_937_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state26) & (1'd0 == exitcond1_fu_810_p2))) begin
        tmp_13_reg_1357 <= tmp_13_fu_821_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state30) & (1'd0 == exitcond_fu_852_p2))) begin
        tmp_17_reg_1390 <= tmp_17_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state38) & (1'd0 == exitcond4_fu_965_p2))) begin
        tmp_38_reg_1470 <= tmp_25_fu_985_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state51)) begin
        tp_reg_1505 <= grp_fu_414_p2;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state25) & ~(1'd0 == exitcond5_fu_775_p2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'd1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state25) & ~(1'd0 == exitcond5_fu_775_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        ap_sig_ioackin_gmem_ARREADY = gmem_ARREADY;
    end else begin
        ap_sig_ioackin_gmem_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_AWREADY)) begin
        ap_sig_ioackin_gmem_AWREADY = gmem_AWREADY;
    end else begin
        ap_sig_ioackin_gmem_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_WREADY)) begin
        ap_sig_ioackin_gmem_WREADY = gmem_WREADY;
    end else begin
        ap_sig_ioackin_gmem_WREADY = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_reg_ioackin_gmem_ARREADY)) begin
        if ((1'd1 == ap_CS_fsm_state40)) begin
            gmem_ARADDR = W4_sum_reg_1483;
        end else if ((1'd1 == ap_CS_fsm_state39)) begin
            gmem_ARADDR = feature_in2_sum_reg_1478;
        end else if (((1'd1 == ap_CS_fsm_state31) & ~(exitcond2_fu_877_p2 == 1'd0))) begin
            gmem_ARADDR = gmem_addr_reg_1333;
        end else begin
            gmem_ARADDR = 'bx;
        end
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == ap_CS_fsm_state31) & ~(exitcond2_fu_877_p2 == 1'd0) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'd1 == ap_CS_fsm_state39) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)) | ((1'd1 == ap_CS_fsm_state40) & (1'b0 == ap_reg_ioackin_gmem_ARREADY)))) begin
        gmem_ARVALID = 1'b1;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state29) & (1'b0 == ap_reg_ioackin_gmem_AWREADY))) begin
        gmem_AWVALID = 1'b1;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state75) & ~(1'b0 == gmem_BVALID))) begin
        gmem_BREADY = 1'b1;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == ap_CS_fsm_state46) & ~(1'b0 == gmem_RVALID)) | ((1'd1 == ap_CS_fsm_state64) & ~(1'b0 == gmem_RVALID)) | ((1'd1 == ap_CS_fsm_state47) & ~(1'b0 == gmem_RVALID)))) begin
        gmem_RREADY = 1'b1;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state71) & (1'b0 == ap_reg_ioackin_gmem_WREADY))) begin
        gmem_WVALID = 1'b1;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == ap_CS_fsm_state31) & ~(exitcond2_fu_877_p2 == 1'd0)) | (1'd1 == ap_CS_fsm_state39) | (1'd1 == ap_CS_fsm_state40))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state29)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state75)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state64) | (1'd1 == ap_CS_fsm_state46) | (1'd1 == ap_CS_fsm_state47))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state71)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state65)) begin
        grp_fu_408_p0 = sum_reg_312;
    end else if ((1'd1 == ap_CS_fsm_state52)) begin
        grp_fu_408_p0 = sum_2_reg_370;
    end else begin
        grp_fu_408_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state65)) begin
        grp_fu_408_p1 = reg_423;
    end else if ((1'd1 == ap_CS_fsm_state52)) begin
        grp_fu_408_p1 = tp_reg_1505;
    end else begin
        grp_fu_408_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state2)) begin
        grp_fu_664_ap_start = 1'b1;
    end else begin
        grp_fu_664_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state2)) begin
        grp_fu_689_ap_start = 1'b1;
    end else begin
        grp_fu_689_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == ap_CS_fsm_state31) & ~(1'b1 == ap_block_state31_io)) | (1'd1 == ap_CS_fsm_state33) | (1'd1 == ap_CS_fsm_state32))) begin
        grp_fu_894_ce = 1'b1;
    end else begin
        grp_fu_894_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state57) & (1'd0 == tmp_38_reg_1470) & (1'd0 == brmerge_reg_1474))) begin
        sum_2_be_phi_fu_397_p6 = sum_5_reg_1510;
    end else begin
        sum_2_be_phi_fu_397_p6 = sum_2_be_reg_393;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        75'd1 : begin
            if (~(1'b0 == ap_start)) begin
                ap_NS_fsm = 75'd2;
            end else begin
                ap_NS_fsm = 75'd1;
            end
        end
        75'd2 : begin
            ap_NS_fsm = 75'd4;
        end
        75'd4 : begin
            ap_NS_fsm = 75'd8;
        end
        75'd8 : begin
            ap_NS_fsm = 75'd16;
        end
        75'd16 : begin
            ap_NS_fsm = 75'd32;
        end
        75'd32 : begin
            ap_NS_fsm = 75'd64;
        end
        75'd64 : begin
            ap_NS_fsm = 75'd128;
        end
        75'd128 : begin
            ap_NS_fsm = 75'd256;
        end
        75'd256 : begin
            ap_NS_fsm = 75'd512;
        end
        75'd512 : begin
            ap_NS_fsm = 75'd1024;
        end
        75'd1024 : begin
            ap_NS_fsm = 75'd2048;
        end
        75'd2048 : begin
            ap_NS_fsm = 75'd4096;
        end
        75'd4096 : begin
            ap_NS_fsm = 75'd8192;
        end
        75'd8192 : begin
            ap_NS_fsm = 75'd16384;
        end
        75'd16384 : begin
            ap_NS_fsm = 75'd32768;
        end
        75'd32768 : begin
            ap_NS_fsm = 75'd65536;
        end
        75'd65536 : begin
            ap_NS_fsm = 75'd131072;
        end
        75'd131072 : begin
            ap_NS_fsm = 75'd262144;
        end
        75'd262144 : begin
            ap_NS_fsm = 75'd524288;
        end
        75'd524288 : begin
            ap_NS_fsm = 75'd1048576;
        end
        75'd1048576 : begin
            ap_NS_fsm = 75'd2097152;
        end
        75'd2097152 : begin
            ap_NS_fsm = 75'd4194304;
        end
        75'd4194304 : begin
            ap_NS_fsm = 75'd8388608;
        end
        75'd8388608 : begin
            ap_NS_fsm = 75'd16777216;
        end
        75'd16777216 : begin
            if (~(1'd0 == exitcond5_fu_775_p2)) begin
                ap_NS_fsm = 75'd1;
            end else begin
                ap_NS_fsm = 75'd33554432;
            end
        end
        75'd33554432 : begin
            if (~(1'd0 == exitcond1_fu_810_p2)) begin
                ap_NS_fsm = 75'd16777216;
            end else begin
                ap_NS_fsm = 75'd67108864;
            end
        end
        75'd67108864 : begin
            ap_NS_fsm = 75'd134217728;
        end
        75'd134217728 : begin
            ap_NS_fsm = 75'd268435456;
        end
        75'd268435456 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_AWREADY)) begin
                ap_NS_fsm = 75'd536870912;
            end else begin
                ap_NS_fsm = 75'd268435456;
            end
        end
        75'd536870912 : begin
            if ((1'd0 == exitcond_fu_852_p2)) begin
                ap_NS_fsm = 75'd1073741824;
            end else begin
                ap_NS_fsm = 75'd2361183241434822606848;
            end
        end
        75'd1073741824 : begin
            if ((~(exitcond2_fu_877_p2 == 1'd0) & ~(1'b1 == ap_block_state31_io))) begin
                ap_NS_fsm = 75'd144115188075855872;
            end else if (((exitcond2_fu_877_p2 == 1'd0) & ~(1'b1 == ap_block_state31_io))) begin
                ap_NS_fsm = 75'd2147483648;
            end else begin
                ap_NS_fsm = 75'd1073741824;
            end
        end
        75'd2147483648 : begin
            ap_NS_fsm = 75'd4294967296;
        end
        75'd4294967296 : begin
            ap_NS_fsm = 75'd8589934592;
        end
        75'd8589934592 : begin
            if (~(1'd0 == exitcond3_fu_903_p2)) begin
                ap_NS_fsm = 75'd1073741824;
            end else begin
                ap_NS_fsm = 75'd17179869184;
            end
        end
        75'd17179869184 : begin
            ap_NS_fsm = 75'd34359738368;
        end
        75'd34359738368 : begin
            ap_NS_fsm = 75'd68719476736;
        end
        75'd68719476736 : begin
            ap_NS_fsm = 75'd137438953472;
        end
        75'd137438953472 : begin
            if (~(1'd0 == exitcond4_fu_965_p2)) begin
                ap_NS_fsm = 75'd8589934592;
            end else if (((1'd0 == exitcond4_fu_965_p2) & (1'd0 == tmp_38_fu_990_p3) & (1'd0 == brmerge_fu_1017_p2))) begin
                ap_NS_fsm = 75'd274877906944;
            end else begin
                ap_NS_fsm = 75'd72057594037927936;
            end
        end
        75'd274877906944 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = 75'd549755813888;
            end else begin
                ap_NS_fsm = 75'd274877906944;
            end
        end
        75'd549755813888 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_ARREADY)) begin
                ap_NS_fsm = 75'd1099511627776;
            end else begin
                ap_NS_fsm = 75'd549755813888;
            end
        end
        75'd1099511627776 : begin
            ap_NS_fsm = 75'd2199023255552;
        end
        75'd2199023255552 : begin
            ap_NS_fsm = 75'd4398046511104;
        end
        75'd4398046511104 : begin
            ap_NS_fsm = 75'd8796093022208;
        end
        75'd8796093022208 : begin
            ap_NS_fsm = 75'd17592186044416;
        end
        75'd17592186044416 : begin
            ap_NS_fsm = 75'd35184372088832;
        end
        75'd35184372088832 : begin
            if (~(1'b0 == gmem_RVALID)) begin
                ap_NS_fsm = 75'd70368744177664;
            end else begin
                ap_NS_fsm = 75'd35184372088832;
            end
        end
        75'd70368744177664 : begin
            if (~(1'b0 == gmem_RVALID)) begin
                ap_NS_fsm = 75'd140737488355328;
            end else begin
                ap_NS_fsm = 75'd70368744177664;
            end
        end
        75'd140737488355328 : begin
            ap_NS_fsm = 75'd281474976710656;
        end
        75'd281474976710656 : begin
            ap_NS_fsm = 75'd562949953421312;
        end
        75'd562949953421312 : begin
            ap_NS_fsm = 75'd1125899906842624;
        end
        75'd1125899906842624 : begin
            ap_NS_fsm = 75'd2251799813685248;
        end
        75'd2251799813685248 : begin
            ap_NS_fsm = 75'd4503599627370496;
        end
        75'd4503599627370496 : begin
            ap_NS_fsm = 75'd9007199254740992;
        end
        75'd9007199254740992 : begin
            ap_NS_fsm = 75'd18014398509481984;
        end
        75'd18014398509481984 : begin
            ap_NS_fsm = 75'd36028797018963968;
        end
        75'd36028797018963968 : begin
            ap_NS_fsm = 75'd72057594037927936;
        end
        75'd72057594037927936 : begin
            ap_NS_fsm = 75'd137438953472;
        end
        75'd144115188075855872 : begin
            ap_NS_fsm = 75'd288230376151711744;
        end
        75'd288230376151711744 : begin
            ap_NS_fsm = 75'd576460752303423488;
        end
        75'd576460752303423488 : begin
            ap_NS_fsm = 75'd1152921504606846976;
        end
        75'd1152921504606846976 : begin
            ap_NS_fsm = 75'd2305843009213693952;
        end
        75'd2305843009213693952 : begin
            ap_NS_fsm = 75'd4611686018427387904;
        end
        75'd4611686018427387904 : begin
            ap_NS_fsm = 75'd9223372036854775808;
        end
        75'd9223372036854775808 : begin
            if (~(1'b0 == gmem_RVALID)) begin
                ap_NS_fsm = 75'd18446744073709551616;
            end else begin
                ap_NS_fsm = 75'd9223372036854775808;
            end
        end
        75'd18446744073709551616 : begin
            ap_NS_fsm = 75'd36893488147419103232;
        end
        75'd36893488147419103232 : begin
            ap_NS_fsm = 75'd73786976294838206464;
        end
        75'd73786976294838206464 : begin
            ap_NS_fsm = 75'd147573952589676412928;
        end
        75'd147573952589676412928 : begin
            ap_NS_fsm = 75'd295147905179352825856;
        end
        75'd295147905179352825856 : begin
            ap_NS_fsm = 75'd590295810358705651712;
        end
        75'd590295810358705651712 : begin
            ap_NS_fsm = 75'd1180591620717411303424;
        end
        75'd1180591620717411303424 : begin
            if (~(1'b0 == ap_sig_ioackin_gmem_WREADY)) begin
                ap_NS_fsm = 75'd536870912;
            end else begin
                ap_NS_fsm = 75'd1180591620717411303424;
            end
        end
        75'd2361183241434822606848 : begin
            ap_NS_fsm = 75'd4722366482869645213696;
        end
        75'd4722366482869645213696 : begin
            ap_NS_fsm = 75'd9444732965739290427392;
        end
        75'd9444732965739290427392 : begin
            ap_NS_fsm = 75'd18889465931478580854784;
        end
        75'd18889465931478580854784 : begin
            if (~(1'b0 == gmem_BVALID)) begin
                ap_NS_fsm = 75'd33554432;
            end else begin
                ap_NS_fsm = 75'd18889465931478580854784;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Hout_V_fu_721_p2 = (16'd1 + tmp_32_fu_717_p1);

assign W4_sum_fu_1037_p2 = (tmp_4_reg_1244 + tmp_30_fu_1032_p2);

assign Wout_V_fu_711_p2 = (16'd1 + tmp_27_fu_707_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

always @ (*) begin
    ap_block_state31_io = (~(exitcond2_fu_877_p2 == 1'd0) & (1'b0 == ap_sig_ioackin_gmem_ARREADY));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bias6_sum_cast_fu_791_p1 = bias6_sum_fu_786_p2;

assign bias6_sum_fu_786_p2 = (tmp_14_cast_reg_1239 + i_op_assign_14_cast6_1_fu_771_p1);

assign brmerge_fu_1017_p2 = (rev1_fu_1011_p2 | rev_reg_1452);

assign cin_fu_882_p2 = (i_op_assign_reg_324 + 16'd1);

assign cout_fu_780_p2 = (i_op_assign_s_reg_245 + 16'd1);

assign exitcond1_fu_810_p2 = ((i_op_assign_9_reg_268 == Wout_V_reg_1254) ? 1'b1 : 1'b0);

assign exitcond2_fu_877_p2 = ((i_op_assign_reg_324 == CHin_V_read_reg_1158) ? 1'b1 : 1'b0);

assign exitcond3_fu_903_p2 = ((i_op_assign_2_reg_359 == Kx_V_read_reg_1136) ? 1'b1 : 1'b0);

assign exitcond4_fu_965_p2 = ((i_op_assign_3_reg_382 == Ky_V_read_reg_1129) ? 1'b1 : 1'b0);

assign exitcond5_fu_775_p2 = ((i_op_assign_s_reg_245 == CHout_V_read_reg_1143) ? 1'b1 : 1'b0);

assign exitcond_fu_852_p2 = ((i_op_assign_1_reg_290 == Hout_V_reg_1259) ? 1'b1 : 1'b0);

assign feature_in2_sum_fu_1027_p2 = (tmp_10_reg_1249 + tmp_29_fu_1022_p2);

assign feature_out8_sum_fu_836_p2 = (tmp_2_reg_1234 + grp_fu_831_p2);

assign grp_fu_664_p0 = $signed(r_V_4_fu_651_p2);

assign grp_fu_664_p1 = grp_fu_664_p10;

assign grp_fu_664_p10 = Sx_V_read_reg_1123;

assign grp_fu_689_p0 = $signed(r_V_8_fu_676_p2);

assign grp_fu_689_p1 = grp_fu_689_p10;

assign grp_fu_689_p10 = Sy_V_read_reg_1117;

assign grp_fu_831_p0 = (i_op_assign_10_cast5_fu_806_p1 + p_2_reg_1339);

assign grp_fu_831_p1 = tmp_5_reg_1264;

assign grp_fu_894_p0 = (i_op_assign_cast3_fu_873_p1 + phi_mul1_reg_256);

assign grp_fu_894_p1 = tmp_20_reg_1310;

assign grp_fu_937_p0 = (tmp5_reg_1413 + i_op_assign_11_cast2_fu_899_p1);

assign grp_fu_937_p1 = p_3_reg_1315;

assign grp_fu_951_p0 = ($signed(phi_mul_reg_335) + $signed(lhs_V_fu_942_p1));

assign grp_fu_951_p1 = rhs_V_reg_1295;

assign h_V_fu_980_p2 = (tmp_24_fu_976_p1 + tmp_17_reg_1390);

assign i_fu_815_p2 = (i_op_assign_9_reg_268 + 16'd1);

assign i_op_assign_10_cast5_fu_806_p1 = i_op_assign_9_reg_268;

assign i_op_assign_11_cast2_fu_899_p1 = i_op_assign_2_reg_359;

assign i_op_assign_13_cast1_fu_961_p1 = i_op_assign_3_reg_382;

assign i_op_assign_14_cast6_1_fu_771_p1 = i_op_assign_s_reg_245;

assign i_op_assign_cast3_fu_873_p1 = i_op_assign_reg_324;

assign ii_fu_908_p2 = (i_op_assign_2_reg_359 + 8'd1);

assign j_fu_857_p2 = (i_op_assign_1_reg_290 + 16'd1);

assign jj_fu_970_p2 = (i_op_assign_3_reg_382 + 8'd1);

assign lhs_V_2_cast_fu_613_p1 = Win_V;

assign lhs_V_4_cast_fu_635_p1 = Hin_V;

assign lhs_V_cast_fu_923_p1 = $signed(w_V_fu_918_p2);

assign lhs_V_fu_942_p1 = $signed(w_V_reg_1426);

assign next_mul1_fu_762_p2 = (tmp_19_reg_1305 + phi_mul1_reg_256);

assign next_mul2_fu_801_p2 = (phi_mul2_reg_279 + tmp_11_reg_1285);

assign next_mul3_fu_847_p2 = (phi_mul3_reg_301 + tmp_15_reg_1290);

assign next_mul_fu_868_p2 = (phi_mul_reg_335 + tmp_18_reg_1300);

assign notlhs_fu_1071_p2 = ((tmp_33_fu_1057_p4 != 8'd255) ? 1'b1 : 1'b0);

assign notrhs_fu_1077_p2 = ((tmp_34_fu_1067_p1 == 23'd0) ? 1'b1 : 1'b0);

assign or_cond_fu_1095_p2 = (tmp_37_fu_1089_p2 & relu_en_V_read_reg_1112);

assign p_1_fu_593_p3 = ((mode_V[0:0] === 1'b1) ? pad_y_V_fu_577_p3 : 8'd0);

assign p_2_fu_1107_p0 = p_2_fu_1107_p00;

assign p_2_fu_1107_p00 = i_op_assign_s_reg_245;

assign p_2_fu_1107_p1 = tmp_7_reg_1270;

assign p_3_fu_759_p1 = Ky_V_read_reg_1129;

assign p_neg9_fu_487_p2 = (9'd1 - tmp_2_cast_fu_469_p1);

assign p_neg_fu_545_p2 = (9'd1 - tmp_26_cast_fu_527_p1);

assign p_s_fu_585_p3 = ((mode_V[0:0] === 1'b1) ? pad_x_V_fu_519_p3 : 8'd0);

assign pad_x_V_fu_519_p3 = ((tmp_12_fu_479_p3[0:0] === 1'b1) ? tmp_6_fu_513_p2 : tmp_14_fu_503_p4);

assign pad_y_V_fu_577_p3 = ((tmp_16_fu_537_p3[0:0] === 1'b1) ? tmp_22_fu_571_p2 : tmp_21_fu_561_p4);

assign r_V_1_tr_fu_531_p2 = ($signed(9'd511) + $signed(tmp_26_cast_fu_527_p1));

assign r_V_2_cast_fu_609_p1 = r_V_2_fu_601_p3;

assign r_V_2_fu_601_p3 = {{p_s_fu_585_p3}, {1'd0}};

assign r_V_3_cast_fu_645_p1 = r_V_3_reg_1199;

assign r_V_3_fu_617_p2 = (lhs_V_2_cast_fu_613_p1 + r_V_2_cast_fu_609_p1);

assign r_V_4_fu_651_p2 = (r_V_3_cast_fu_645_p1 - rhs_V_2_cast_fu_648_p1);

assign r_V_6_cast_fu_631_p1 = r_V_6_fu_623_p3;

assign r_V_6_fu_623_p3 = {{p_1_fu_593_p3}, {1'd0}};

assign r_V_7_cast_fu_670_p1 = r_V_7_reg_1209;

assign r_V_7_fu_639_p2 = (lhs_V_4_cast_fu_635_p1 + r_V_6_cast_fu_631_p1);

assign r_V_8_fu_676_p2 = (r_V_7_cast_fu_670_p1 - rhs_V_5_cast_fu_673_p1);

assign r_V_tr_fu_473_p2 = ($signed(9'd511) + $signed(tmp_2_cast_fu_469_p1));

assign rev1_fu_1011_p2 = (slt1_fu_1006_p2 ^ 1'd1);

assign rev_fu_956_p2 = (slt_reg_1432 ^ 1'd1);

assign rhs_V_2_cast_fu_648_p1 = Kx_V_read_reg_1136;

assign rhs_V_5_cast_fu_673_p1 = Ky_V_read_reg_1129;

assign rhs_V_fu_747_p1 = Hin_V_read_reg_1153;

assign slt1_fu_1006_p2 = (($signed(tmp_28_cast_fu_1002_p1) < $signed(lhs_V_4_cast_reg_1204)) ? 1'b1 : 1'b0);

assign slt_fu_927_p2 = (($signed(lhs_V_cast_fu_923_p1) < $signed(lhs_V_2_cast_reg_1194)) ? 1'b1 : 1'b0);

assign sum_4_fu_1100_p3 = ((or_cond_fu_1095_p2[0:0] === 1'b1) ? 32'd0 : sum_3_reg_1515);

assign sum_5_to_int_fu_1054_p1 = sum_3_reg_1515;

assign tmp_10_fu_704_p1 = feature_in1_reg_1179;

assign tmp_11_fu_741_p1 = Sx_V_read_reg_1123;

assign tmp_12_fu_479_p3 = r_V_tr_fu_473_p2[32'd8];

assign tmp_13_fu_821_p2 = (phi_mul2_reg_279 - tmp_8_reg_1275);

assign tmp_14_cast_fu_698_p1 = tmp_1_reg_1169;

assign tmp_14_fu_503_p4 = {{r_V_tr_fu_473_p2[8:1]}};

assign tmp_15_fu_744_p1 = Sy_V_read_reg_1117;

assign tmp_16_fu_537_p3 = r_V_1_tr_fu_531_p2[32'd8];

assign tmp_17_fu_863_p2 = (phi_mul3_reg_301 - tmp_9_reg_1280);

assign tmp_18_fu_750_p1 = Win_V_read_reg_1148;

assign tmp_19_fu_753_p1 = CHin_V_read_reg_1158;

assign tmp_20_fu_756_p1 = Kx_V_read_reg_1136;

assign tmp_21_fu_561_p4 = {{r_V_1_tr_fu_531_p2[8:1]}};

assign tmp_22_fu_571_p2 = (8'd0 - tmp_s_fu_551_p4);

assign tmp_23_fu_914_p1 = i_op_assign_2_reg_359;

assign tmp_24_fu_976_p1 = i_op_assign_3_reg_382;

assign tmp_25_fu_985_p2 = (h_V_fu_980_p2 | w_V_reg_1426);

assign tmp_26_cast_fu_527_p1 = Ky_V;

assign tmp_27_fu_707_p1 = grp_fu_664_p2[15:0];

assign tmp_28_cast_fu_1002_p1 = $signed(h_V_fu_980_p2);

assign tmp_28_fu_998_p1 = $signed(h_V_fu_980_p2);

assign tmp_29_fu_1022_p2 = ($signed(tmp3_reg_1457) + $signed(tmp_28_fu_998_p1));

assign tmp_2_cast_fu_469_p1 = Kx_V;

assign tmp_2_fu_695_p1 = feature_out7_reg_1164;

assign tmp_30_fu_1032_p2 = (tmp7_reg_1447 + i_op_assign_13_cast1_fu_961_p1);

assign tmp_32_fu_717_p1 = grp_fu_689_p2[15:0];

assign tmp_33_fu_1057_p4 = {{sum_5_to_int_fu_1054_p1[30:23]}};

assign tmp_34_fu_1067_p1 = sum_5_to_int_fu_1054_p1[22:0];

assign tmp_35_fu_1083_p2 = (notrhs_fu_1077_p2 | notlhs_fu_1071_p2);

assign tmp_37_fu_1089_p2 = (tmp_35_fu_1083_p2 & tmp_36_fu_418_p2);

assign tmp_38_fu_990_p3 = tmp_25_fu_985_p2[32'd15];

assign tmp_3_fu_493_p4 = {{p_neg9_fu_487_p2[8:1]}};

assign tmp_4_fu_701_p1 = W3_reg_1174;

assign tmp_5_fu_727_p1 = Hout_V_fu_721_p2;

assign tmp_6_fu_513_p2 = (8'd0 - tmp_3_fu_493_p4);

assign tmp_7_fu_731_p1 = Wout_V_fu_711_p2;

assign tmp_8_fu_735_p1 = p_s_reg_1184;

assign tmp_9_fu_738_p1 = p_1_reg_1189;

assign tmp_s_fu_551_p4 = {{p_neg_fu_545_p2[8:1]}};

assign w_V_fu_918_p2 = (tmp_23_fu_914_p1 + tmp_13_reg_1357);

always @ (posedge ap_clk) begin
    lhs_V_2_cast_reg_1194[16] <= 1'b0;
    lhs_V_4_cast_reg_1204[16] <= 1'b0;
    tmp_2_reg_1234[31:30] <= 2'b00;
    tmp_14_cast_reg_1239[30] <= 1'b0;
    tmp_4_reg_1244[31:30] <= 2'b00;
    tmp_10_reg_1249[31:30] <= 2'b00;
    tmp_5_reg_1264[31:16] <= 16'b0000000000000000;
    tmp_7_reg_1270[31:16] <= 16'b0000000000000000;
    tmp_8_reg_1275[15:8] <= 8'b00000000;
    tmp_9_reg_1280[15:8] <= 8'b00000000;
    tmp_11_reg_1285[15:8] <= 8'b00000000;
    tmp_15_reg_1290[15:8] <= 8'b00000000;
    rhs_V_reg_1295[31:16] <= 16'b0000000000000000;
    tmp_18_reg_1300[31:16] <= 16'b0000000000000000;
    tmp_19_reg_1305[31:16] <= 16'b0000000000000000;
    tmp_20_reg_1310[31:8] <= 24'b000000000000000000000000;
    p_3_reg_1315[31:8] <= 24'b000000000000000000000000;
    gmem_addr_reg_1333[31] <= 1'b0;
end

endmodule //Conv
