#-----------------------------------------------------------
# xsim v2016.4_sdx (64-bit)
# SW Build 1806307 on Thu Mar  9 15:24:31 MST 2017
# IP Build 1759159 on Thu Jan 26 07:31:30 MST 2017
# Start of session at: Thu Aug 20 20:17:29 2020
# Process ID: 13160
# Current directory: E:/Exercise/FPGA/FPGA_CNN/01_mnist_cnn/hls/pool_core/solution1/sim/verilog
# Command line: xsim.exe -mode tcl -source {xsim.dir/Pool/xsim_script.tcl}
# Log file: E:/Exercise/FPGA/FPGA_CNN/01_mnist_cnn/hls/pool_core/solution1/sim/verilog/xsim.log
# Journal file: E:/Exercise/FPGA/FPGA_CNN/01_mnist_cnn/hls/pool_core/solution1/sim/verilog\xsim.jou
#-----------------------------------------------------------
Sourcing tcl script 'D:/ProgramData/Xilinx/SDx/2016.4/Vivado/scripts/init.tcl'
Loaded SDSoC Platform Tcl Library
source xsim.dir/Pool/xsim_script.tcl
# xsim {Pool} -autoloadwcfg -tclbatch {Pool.tcl}
Vivado Simulator 2016.4
Time resolution is 1 ps
source Pool.tcl
## log_wave [get_objects -filter {type == in_port || type == out_port || type == inout_port || type == port} /apatb_Pool_top/AESL_inst_Pool/*]
## set designtopgroup [add_wave_group "Design Top Signals"]
## set cinoutgroup [add_wave_group "C InOuts" -into $designtopgroup]
## set feature_in__feature_out_group [add_wave_group feature_in__feature_out(axi_master) -into $cinoutgroup]
## set rdata_group [add_wave_group "Read Channel" -into $feature_in__feature_out_group]
## set wdata_group [add_wave_group "Write Channel" -into $feature_in__feature_out_group]
## set ctrl_group [add_wave_group "Handshakes" -into $feature_in__feature_out_group]
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_BUSER -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_BID -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_BRESP -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_BREADY -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_BVALID -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RRESP -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RUSER -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RID -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RLAST -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RDATA -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RREADY -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_RVALID -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARUSER -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARREGION -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARQOS -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARPROT -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARCACHE -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARLOCK -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARBURST -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARSIZE -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARLEN -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARID -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARADDR -into $rdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARREADY -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_ARVALID -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WUSER -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WID -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WLAST -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WSTRB -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WDATA -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WREADY -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_WVALID -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWUSER -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWREGION -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWQOS -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWPROT -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWCACHE -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWLOCK -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWBURST -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWSIZE -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWLEN -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWID -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWADDR -into $wdata_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWREADY -into $ctrl_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/m_axi_gmem_AWVALID -into $ctrl_group -color #ffff00 -radix hex
## set CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group [add_wave_group CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return(axi_slave) -into $cinoutgroup]
## add_wave /apatb_Pool_top/AESL_inst_Pool/interrupt -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_BRESP -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_BREADY -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_BVALID -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_RRESP -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_RDATA -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_RREADY -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_RVALID -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_ARREADY -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_ARVALID -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_ARADDR -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_WSTRB -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_WDATA -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_WREADY -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_WVALID -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_AWREADY -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_AWVALID -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -color #ffff00 -radix hex
## add_wave /apatb_Pool_top/AESL_inst_Pool/s_axi_AXILiteS_AWADDR -into $CHin__Hin__Win__Kx__Ky__mode__feature_in__feature_out__return_group -radix hex
## set resetgroup [add_wave_group "Reset" -into $designtopgroup]
## add_wave /apatb_Pool_top/AESL_inst_Pool/ap_rst_n -into $resetgroup
## set clockgroup [add_wave_group "Clock" -into $designtopgroup]
## add_wave /apatb_Pool_top/AESL_inst_Pool/ap_clk -into $clockgroup
## save_wave_config Pool.wcfg
## run all
Note: 
******************************************************
  renorm_and_round_logic.vhd :
    FULL_MANT_RND1_DEL is using fast_input
    which will be faster, but create more FFs.
******************************************************
Time: 0 ps  Iteration: 0
Warning: OPMODE Input Warning : The OPMODE 0110X0X with CARRYINSEL  000 to DSP48E1 instance is invalid.
Time: 100010 ps  Iteration: 0  Process: /apatb_Pool_top/AESL_inst_Pool/Pool_fadd_32ns_32bkb_U0/Pool_ap_fadd_3_full_dsp_32_u/U0/i_synth/addsub_op/ADDSUB/speed_op/dsp/OP/dsp48e1_body/ALIGN_ADD/DSP2/DSP/prcs_opmode_drc  File: D:\ProgramData\Xilinx\SDx\2016.4\Vivado\data/vhdl/src/unisims/primitive/DSP48E1.vhd
////////////////////////////////////////////////////////////////////////////////////
// Inter-Transaction Progress: Completed Transaction / Total Transaction
// Intra-Transaction Progress: Measured Latency / Latency Estimation * 100%
//
// RTL Simulation : "Inter-Transaction Progress" ["Intra-Transaction Progress"] @ "Simulation Time"
////////////////////////////////////////////////////////////////////////////////////
// RTL Simulation : 0 / 1 [n/a] @ "125000"
E:/Exercise/FPGA/FPGA_CNN/01_mnist_cnn/hls/pool_core/solution1/sim/verilog/AESL_axi_master_gmem.v: Read request address          6 exceed AXI master gmem array depth:          2
$finish called at time : 1885 ns : File "E:/Exercise/FPGA/FPGA_CNN/01_mnist_cnn/hls/pool_core/solution1/sim/verilog/AESL_axi_master_gmem.v" Line 690
## quit
INFO: [Common 17-206] Exiting xsim at Thu Aug 20 20:17:35 2020...
