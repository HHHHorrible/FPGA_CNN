-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity matrix_add is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_we0 : OUT STD_LOGIC;
    A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_ce1 : OUT STD_LOGIC;
    A_we1 : OUT STD_LOGIC;
    A_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    B : IN STD_LOGIC_VECTOR (511 downto 0);
    C_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    C_ce0 : OUT STD_LOGIC;
    C_we0 : OUT STD_LOGIC;
    C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    C_ce1 : OUT STD_LOGIC;
    C_we1 : OUT STD_LOGIC;
    C_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of matrix_add is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "matrix_add,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=0,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";



begin



    A_address0 <= ap_const_lv4_0;
    A_address1 <= ap_const_lv4_0;
    A_ce0 <= ap_const_logic_0;
    A_ce1 <= ap_const_logic_0;
    A_d0 <= ap_const_lv32_0;
    A_d1 <= ap_const_lv32_0;
    A_we0 <= ap_const_logic_0;
    A_we1 <= ap_const_logic_0;
    C_address0 <= ap_const_lv4_0;
    C_address1 <= ap_const_lv4_0;
    C_ce0 <= ap_const_logic_0;
    C_ce1 <= ap_const_logic_0;
    C_d0 <= ap_const_lv32_0;
    C_d1 <= ap_const_lv32_0;
    C_we0 <= ap_const_logic_0;
    C_we1 <= ap_const_logic_0;
    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
end behav;
